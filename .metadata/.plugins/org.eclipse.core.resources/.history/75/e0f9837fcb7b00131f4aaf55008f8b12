package com.example.subnetting;

import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.os.Bundle;
import android.app.Activity;
import android.app.AlertDialog;
import android.app.Dialog;
import android.view.Menu;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import java.math.BigInteger;
import java.net.*;

import org.apache.http.conn.util.InetAddressUtils;

public class MainActivity extends Activity {

	public void ip1(View x) {
		EditText editText = (EditText)findViewById(R.id.ip1);
		editText.setText("",TextView.BufferType.EDITABLE); } 
		
	public void ip2(View x) {
		EditText editText = (EditText)findViewById(R.id.ip2);
		editText.setText("",TextView.BufferType.EDITABLE); } 
			
	public void ip3(View x) {
		EditText editText = (EditText)findViewById(R.id.ip3);
		editText.setText("",TextView.BufferType.EDITABLE); }
				
	public void ip4(View x) {
		EditText editText = (EditText)findViewById(R.id.ip4);
		editText.setText("",TextView.BufferType.EDITABLE); } 
	
	public void n1(View x) {
		  EditText editText = (EditText)findViewById(R.id.n1);
		  editText.setText("",TextView.BufferType.EDITABLE); }
		  
	public void n2(View x) {
	   	EditText editText = (EditText)findViewById(R.id.n2);
	    editText.setText("",TextView.BufferType.EDITABLE); } 
		 
    public void n3(View x) {
		 EditText editText = (EditText)findViewById(R.id.n3);
		 editText.setText("",TextView.BufferType.EDITABLE);  }
		 
	public void n4(View x) {
		 EditText editText = (EditText)findViewById(R.id.n4);
		 editText.setText("",TextView.BufferType.EDITABLE); } 		
	 
	public static boolean validIP (String ip) {
	    try {
	        if (ip == null || ip.isEmpty()) {
	            return false;
	        }

	        String[] parts = ip.split( "\\." );
	        if ( parts.length != 4 ) {
	            return false;
	        }

	        for ( String s : parts ) {
	            int i = Integer.parseInt( s );
	            if ( (i < 0) || (i > 255) ) {
	                return false;
	            }
	        }

	        return true;
	    } catch (NumberFormatException nfe) {
	        return false;
	    }
	} 
	
	public static boolean validNetmask(String[] sepparateBitsNetmask)
	{
		int bFoundZero = 0;
		if(sepparateBitsNetmask.length != 33)
			return false;
		for(int i=1; i<sepparateBitsNetmask.length; i++)
		{
			if(sepparateBitsNetmask[i].equals("0"))
				bFoundZero = 1;
			if(bFoundZero == 1 && sepparateBitsNetmask[i].equals("1"))
				return false;
		}
		
		return true;
	}
	
	public static int getSlash(String[] sepparateBitsNetmask)
	{
		int count = 0;
		for(int i=1; i<sepparateBitsNetmask.length; i++)
		{
			if(sepparateBitsNetmask[i].equals("1"))
				count++;
		}
		return count;
	}
	
	public static int getNoOfHosts(String[] sepparateBitsNetmask)
	{
		int nSlash = getSlash(sepparateBitsNetmask);
		int nSlashWildcard = 32 - nSlash;
		return (int) Math.pow(2, nSlashWildcard) - 2;
	}
	 
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
	}
	
	@Override
	protected void onStart() {
		super.onStart();
		setContentView(R.layout.activity_main);
		        
        Button buttonCalculate = (Button) findViewById(R.id.button_calculate);
        
        buttonCalculate.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				EditText editTextBroadcastAddress = (EditText) findViewById(R.id.edit_text_broadcast_address);
				editTextBroadcastAddress.setText("works");

				String ip1 = ((EditText)findViewById(R.id.ip1)).getText().toString();
				String ip2 = ((EditText)findViewById(R.id.ip2)).getText().toString();
				String ip3 = ((EditText)findViewById(R.id.ip3)).getText().toString();
				String ip4 = ((EditText)findViewById(R.id.ip4)).getText().toString();
				
				String n1 = ((EditText)findViewById(R.id.n1)).getText().toString();
				String n2 = ((EditText)findViewById(R.id.n2)).getText().toString();
				String n3 = ((EditText)findViewById(R.id.n3)).getText().toString();
				String n4 = ((EditText)findViewById(R.id.n4)).getText().toString();

				String completeIP = ip1 + "." + ip2 + "." + ip3 + "." + ip4;
				String completeNetmask = n1 + "." + n2 + "." + n3 + "." + n4;

				if(validIP(completeIP) == true && validIP(completeNetmask) == true)
					try 
					{
						InetAddress addr = InetAddress.getByName(completeIP);
						InetAddress netmask = InetAddress.getByName(completeNetmask);
	
						byte[] IPInBytes = addr.getAddress();
						byte[] NetmaskInBytes = netmask.getAddress();
						
						String stringBitsIP = new BigInteger(1, IPInBytes).toString(2);
						String stringBitsNetmask = new BigInteger(1, NetmaskInBytes).toString(2);						
						
						String[] arrBitsIP = stringBitsIP.split("");
						String[] arrBitsNetmask = stringBitsNetmask.split("");
				
						System.out.println("\nIP: " + stringBitsIP);
						System.out.println("\nNetmask: " + stringBitsNetmask);

						
						if(validNetmask(arrBitsNetmask) == false)
							showDialogueIncompleteData().show();
						else
						{
							int nNoOfHosts = getNoOfHosts(arrBitsNetmask);
							int nSlash = getSlash(arrBitsNetmask);
							
							EditText editTextNoOfHosts = (EditText) findViewById(R.id.edit_text_number_of_hosts);
							editTextNoOfHosts.setText(nNoOfHosts + " hosts");
							
							EditText editTextNetmaskSlash = (EditText) findViewById(R.id.edit_text_netmask_slashts);
							editTextNetmaskSlash.setText("/" + nSlash);							
						}
						
					} 
					catch (UnknownHostException e) 
					{
						showDialogueIncompleteData().show();
					}
				else
					showDialogueIncompleteData().show();

			}
		});
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}
	
	private Dialog showDialogueIncompleteData() {
		AlertDialog.Builder builder = new AlertDialog.Builder(this);
		LayoutInflater inflater = this.getLayoutInflater();
		
		builder.setView(inflater.inflate(R.layout.incomplete_data, null))
	    	.setCancelable(true)
	    	.setPositiveButton("OK", null);
		return builder.create();
	}


}
